name: quality-assurance

on:
  pull_request:

env:
  python-version: "3.9"
  rust-version: "1.61.0"
  node-version: "16"

jobs:
  check-quality-assurance:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # pin v3.0.2

      - uses: actions/setup-python@d09bd5e6005b175076f227b13d9730d56e9dcfcb  # pin v4.0.0
        with:
          python-version: ${{ env.python-version }}

      - uses: actions/setup-node@eeb10cff27034e7acf239c5d29f62154018672fd  # pin v3.3.0
        with:
          node-version: ${{ env.node-version }}

      - name: Cache Rust
        id: cache-rust
        env:
          cache-version: 1
        uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # pin v3.2.2
        with:
          key: ${{ runner.os }}-rust-${{ env.cache-version }}.${{ env.rust-version }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-${{ env.cache-version }}.${{ env.rust-version }}
            ${{ runner.os }}-rust-${{ env.cache-version }}
            ${{ runner.os }}-rust-
          path: |
            target
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db

      - if: ${{ steps.cache-rust.outputs.cache-hit == 'false' }}
        uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # pin v1.0.6
        with:
          toolchain: ${{ env.rust-version }}
          components: rustfmt, clippy
          default: true

      - name: Debug installed tools
        run: |
          python --version
          rustc --version
          cargo --version
          node --version

      - name: Debug rust cache
        run: |
          ls -la ~/.cargo/{.,bin,git,registry} target || true

      - name: Check Commit Signature
        run: python .github/scripts/check_commit_signature.py

      - name: Check Newsfragment
        if: |
          ${{
            startsWith(github.ref, 'refs/pull/')
            && !(startsWith(github.ref_name, 'dependabot')
              || startsWith(github.ref_name, 'yolo')
              || startsWith(github.ref_name, 'release'))
          }}
        run: |
          whereis git
          git fetch origin master
          python .github/scripts/check_news_fragment.py ${{ github.ref_name }}

      - name: Run cargo build to prepare rust's cache
        run: cargo build --workspace

      - name: Patch pre-commit for line-ending
        run: |
          sed -i '/id: mixed-line-ending/a\      args:\n\        - "--fix=lf"' .pre-commit-config.yaml

      - uses: pre-commit/action@646c83fcd040023954eafda54b4db0192ce70507 # pin v3.0.0
        with:
          extra_args: --show-diff-on-failure --all-files
